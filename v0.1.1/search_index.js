var documenterSearchIndex = {"docs":
[{"location":"gspatialautocorrelation/","page":"Global Spatial Autocorrelation","title":"Global Spatial Autocorrelation","text":"CurrentModule = SpatialDependence","category":"page"},{"location":"gspatialautocorrelation/#Global-Spatial-Autocorrelation","page":"Global Spatial Autocorrelation","title":"Global Spatial Autocorrelation","text":"","category":"section"},{"location":"gspatialautocorrelation/","page":"Global Spatial Autocorrelation","title":"Global Spatial Autocorrelation","text":"The package contains functions to compute global spatial autocorrelation.","category":"page"},{"location":"gspatialautocorrelation/#Moran's-I","page":"Global Spatial Autocorrelation","title":"Moran's I","text":"","category":"section"},{"location":"gspatialautocorrelation/","page":"Global Spatial Autocorrelation","title":"Global Spatial Autocorrelation","text":"moran","category":"page"},{"location":"gspatialautocorrelation/#SpatialDependence.moran","page":"Global Spatial Autocorrelation","title":"SpatialDependence.moran","text":"moran(x, W)\n\nCompute the global moran index of spatial autocorrelation.\n\nOptional Arguments\n\npermutations=9999: number of permutations for the randomization test.\nrng=default_rng(): random number generator for the randomization test.\n\n\n\n\n\n","category":"function"},{"location":"spatiallag/","page":"Spatial Lag","title":"Spatial Lag","text":"CurrentModule = SpatialDependence","category":"page"},{"location":"spatiallag/#Spatial-lags","page":"Spatial Lag","title":"Spatial lags","text":"","category":"section"},{"location":"spatiallag/","page":"Spatial Lag","title":"Spatial Lag","text":"slag","category":"page"},{"location":"spatiallag/#SpatialDependence.slag","page":"Spatial Lag","title":"SpatialDependence.slag","text":"slag(W, x)\n\nCalculate the spatial lag of x using the spatial weights W.\n\nExamples\n\njulia> using SpatialDatasets\n\njulia> guerry = sdataset(\"Guerry\");\n\njulia> W = polyneigh(guerry.geometry);\n\njulia> wtransform!(W, :row)\n\njulia> sx = slag(W, guerry.Litercy);\n\n\n\n\n\n","category":"function"},{"location":"","page":"Home","title":"Home","text":"CurrentModule = SpatialDependence","category":"page"},{"location":"#SpatialDependence","page":"Home","title":"SpatialDependence","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"The package SpatialDependence.jl is a Julia package for spatial dependence (spatial autocorrelation), spatial weights matrices, and exploratory spatial data analysis (ESDA).","category":"page"},{"location":"#Example","page":"Home","title":"Example","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"The following example reads Guerry's Moral statistics of France data and builds a spatial contiguity matrix from the polygons. The spatial weights matrix is row standardized, and the Morans' I index is calculated:","category":"page"},{"location":"","page":"Home","title":"Home","text":"# Load packages\nusing Plots\nusing SpatialDependence\nusing SpatialDatasets\nusing StableRNGs\n\n# Guerry's Moral statistics of France data from the SpatialDatasets.jl package\nguerry = sdataset(\"Guerry\");\n\n#Â Build polygon contiguity matrix\nW = polyneigh(guerry.geometry);","category":"page"},{"location":"","page":"Home","title":"Home","text":"# Row-standardize the spatial weights matrix\nwtransform!(W, :row);\n\n# Global Moran test of Spatial Autocorrelation of the Litercy variable\nmoran(guerry.Litercy, W, permutations = 9999, rng = StableRNG(1234567))","category":"page"},{"location":"","page":"Home","title":"Home","text":"# Moran Scatterplot of the Litercy variable\nplot(guerry.Litercy, W, true, xlabel = \"Litercy\")","category":"page"},{"location":"#Documentation-index","page":"Home","title":"Documentation index","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Pages = [\"sweightmatrices.md\", \"spatiallag.md\", \"gspatialautocorrelation.md\"]\nDepth = 3","category":"page"},{"location":"sweightmatrices/","page":"Spatial Weight Matrices","title":"Spatial Weight Matrices","text":"CurrentModule = SpatialDependence","category":"page"},{"location":"sweightmatrices/#Spatial-Weight-Matrices","page":"Spatial Weight Matrices","title":"Spatial Weight Matrices","text":"","category":"section"},{"location":"sweightmatrices/#Polygon-contiguity","page":"Spatial Weight Matrices","title":"Polygon contiguity","text":"","category":"section"},{"location":"sweightmatrices/","page":"Spatial Weight Matrices","title":"Spatial Weight Matrices","text":"polyneigh","category":"page"},{"location":"sweightmatrices/#SpatialDependence.polyneigh","page":"Spatial Weight Matrices","title":"SpatialDependence.polyneigh","text":"polyneigh(P, criterion = :Queen)\n\nBuild a spatial weights object from a vector of polygons P.\n\nOptional Arguments\n\ncriterion=:Queen: neighbour criterion. :Queen or :Rook.\ntol=0.0: tolerance for polygon contiguity.\n\nExamples\n\njulia> using SpatialDatasets\n\njulia> guerry = sdataset(\"Guerry\");\n\njulia> W = polyneigh(guerry.geometry)\nSpatial Weights object \nObservations: 85 \nTransformation: binary\nAverage number of neighbors: 4.9412\nMinimum nunmber of neighbors: 2\nMaximum nunmber of neighbors: 8\nMedian number of neighbors: 5.0\nIslands (isloated): 0\nDensity: 5.8131% \n\n\n\n\n\n","category":"function"},{"location":"sweightmatrices/#Points-distance-threshold","page":"Spatial Weight Matrices","title":"Points distance threshold","text":"","category":"section"},{"location":"sweightmatrices/","page":"Spatial Weight Matrices","title":"Spatial Weight Matrices","text":"dnearneigh","category":"page"},{"location":"sweightmatrices/#SpatialDependence.dnearneigh","page":"Spatial Weight Matrices","title":"SpatialDependence.dnearneigh","text":"dnearneigh(X, Y; threshold)\n\nBuild a spatial weights object from a set of coordinates using a distance threshold.\n\nExamples\n\njulia> using SpatialDatasets\n\njulia> bostonhsg = sdataset(\"Bostonhsg\");\n\njulia> W = dnearneigh(bostonhsg.x, bostonhsg.y, threshold = 4)\nSpatial Weights object \nObservations: 506 \nTransformation: binary\nAverage number of neighbors: 72.2253\nMinimum nunmber of neighbors: 1\nMaximum nunmber of neighbors: 178\nMedian number of neighbors: 56.0\nIslands (isloated): 0\nDensity: 14.2738% \n\n\n\n\n\ndnearneigh(P; threshold)\n\nBuild a spatial weights object from a vector of points using a distance threshold.\n\nExamples\n\njulia> using SpatialDatasets\n\njulia> bostonhsg = sdataset(\"Bostonhsg\");\n\njulia> W = dnearneigh(bostonhsg.geometry, threshold = 4)\nSpatial Weights object \nObservations: 506 \nTransformation: binary\nAverage number of neighbors: 72.2253\nMinimum nunmber of neighbors: 1\nMaximum nunmber of neighbors: 178\nMedian number of neighbors: 56.0\nIslands (isloated): 0\nDensity: 14.2738% \n\n\n\n\n\n","category":"function"},{"location":"sweightmatrices/#Points-K-nearest-neighbors","page":"Spatial Weight Matrices","title":"Points K nearest neighbors","text":"","category":"section"},{"location":"sweightmatrices/","page":"Spatial Weight Matrices","title":"Spatial Weight Matrices","text":"knearneigh","category":"page"},{"location":"sweightmatrices/#SpatialDependence.knearneigh","page":"Spatial Weight Matrices","title":"SpatialDependence.knearneigh","text":"knearneigh(X, Y; k)\n\nBuild a spatial weights object from a set of coordinates using k nearest neighbors.\n\nExamples\n\njulia> using SpatialDatasets\n\njulia> bostonhsg = sdataset(\"Bostonhsg\");\n\njulia> W = knearneigh(bostonhsg.x, bostonhsg.y, k = 10)\nSpatial Weights object \nObservations: 506 \nTransformation: Binary\nAverage number of neighbors: 10.0\nMinimum nunmber of neighbors: 10\nMaximum nunmber of neighbors: 10\nMedian number of neighbors: 10.0\nIslands (isloated): 0\nDensity: 1.9763% \n\n\n\n\n\nknearneigh(P; k)\n\nBuild a spatial weights object from a vector of points using k nearest neighbors.\n\nExamples\n\njulia> using SpatialDatasets\n\njulia> bostonhsg = sdataset(\"Bostonhsg\");\n\njulia> W = knearneigh(bostonhsg.geometry, k = 10)\nSpatial Weights object \nObservations: 506 \nTransformation: Binary\nAverage number of neighbors: 10.0\nMinimum nunmber of neighbors: 10\nMaximum nunmber of neighbors: 10\nMedian number of neighbors: 10.0\nIslands (isloated): 0\nDensity: 1.9763% \n\n\n\n\n\n","category":"function"},{"location":"sweightmatrices/#Spatial-Matrix-transformation","page":"Spatial Weight Matrices","title":"Spatial Matrix transformation","text":"","category":"section"},{"location":"sweightmatrices/","page":"Spatial Weight Matrices","title":"Spatial Weight Matrices","text":"wtransform!\nwtransform\nSpatialDependence.wtransformation","category":"page"},{"location":"sweightmatrices/#SpatialDependence.wtransform!","page":"Spatial Weight Matrices","title":"SpatialDependence.wtransform!","text":"wtransform!(W::SpatialWeights, style::Symbol)\n\nIn-place transformation of the weights using the specified style.\n\nWeights transformation\n\nstyle can be one of the following:\n\n:binary: 1 if neighbor, 0 if not.\n:row: row-standardized. Each row sum equals one.\n\nExamples\n\njulia> W = SpatialWeights([0 1 0; 1 0 1; 0 1 0]);\n\njulia> wtransform!(W, :row)\n\n\n\n\n\n","category":"function"},{"location":"sweightmatrices/#SpatialDependence.wtransform","page":"Spatial Weight Matrices","title":"SpatialDependence.wtransform","text":"wtransform(W::SpatialWeights, style::Symbol)\n\nReturns a transformed copy of the weights matrix.\n\n\n\n\n\n","category":"function"},{"location":"sweightmatrices/#SpatialDependence.wtransformation","page":"Spatial Weight Matrices","title":"SpatialDependence.wtransformation","text":"wtransformation (W::SpatialWeights)\n\nReturn the current transformation of the spatial weights.\n\nExamples\n\njulia> W = SpatialWeights([0 1 0; 1 0 1; 0 1 0]);\n\njulia> wtransform!(W, :row)\n\njulia> wtransformation(W)\n:row\n\n\n\n\n\n","category":"function"},{"location":"sweightmatrices/#Spatial-Matrix-information","page":"Spatial Weight Matrices","title":"Spatial Matrix information","text":"","category":"section"},{"location":"sweightmatrices/","page":"Spatial Weight Matrices","title":"Spatial Weight Matrices","text":"nislands\nislands\nneighbors\nweights","category":"page"},{"location":"sweightmatrices/#SpatialDependence.nislands","page":"Spatial Weight Matrices","title":"SpatialDependence.nislands","text":"nislands (W::SpatialWeights)\n\nReturn the number of islands in the spatial weights object.\n\nExamples\n\njulia> W = SpatialWeights([0 1 0; 1 0 1; 0 0 0]);\n\njulia> nislands(W)\n1\n\n\n\n\n\n","category":"function"},{"location":"sweightmatrices/#SpatialDependence.islands","page":"Spatial Weight Matrices","title":"SpatialDependence.islands","text":"islands (W::SpatialWeights)\n\nReturn a vector with the islands in the spatial weights object.\n\nExamples\n\njulia> W = SpatialWeights([0 1 0; 1 0 1; 0 0 0]);\n\njulia> islands(W)\n1-element Vector{Int64}:\n 3\n\n\n\n\n\n","category":"function"},{"location":"sweightmatrices/#SpatialDependence.neighbors","page":"Spatial Weight Matrices","title":"SpatialDependence.neighbors","text":"neighbors(W::SpatialWeights, i::Int)\n\nReturn a vector with the neighbors of i.\n\nExamples\n\njulia> W = SpatialWeights([0 1 0; 1 0 1; 0 1 0]);\n\njulia> neighbors(W, 2)\n2-element Vector{Int64}:\n 1\n 3\n\n\n\n\n\n","category":"function"},{"location":"sweightmatrices/#StatsBase.weights","page":"Spatial Weight Matrices","title":"StatsBase.weights","text":"weights(W::SpatialWeights, i::Int)\n\nReturn a vector with the weights of the neighbors of i.\n\nExamples\n\njulia> W = SpatialWeights([0 1 0; 1 0 1; 0 1 0]);\n\njulia> wtransform!(W, :row)\n\njulia> weights(W, 2)\n2-element Vector{Float64}:\n 0.5\n 0.5\n\n\n\n\n\n","category":"function"}]
}
