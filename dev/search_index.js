var documenterSearchIndex = {"docs":
[{"location":"gspatialautocorrelation/","page":"Global Spatial Autocorrelation","title":"Global Spatial Autocorrelation","text":"CurrentModule = SpatialDependence","category":"page"},{"location":"gspatialautocorrelation/#Global-Spatial-Autocorrelation","page":"Global Spatial Autocorrelation","title":"Global Spatial Autocorrelation","text":"","category":"section"},{"location":"gspatialautocorrelation/","page":"Global Spatial Autocorrelation","title":"Global Spatial Autocorrelation","text":"Global spatial autocorrelation statistics are used to test for clustering of the data and identify global positive or negative spatial autocorrelation patterns.","category":"page"},{"location":"gspatialautocorrelation/","page":"Global Spatial Autocorrelation","title":"Global Spatial Autocorrelation","text":"Inference is performed through a computational permutation approach by randomly reshuffling the values of the variable to different locations. The observed statistic is compared to a reference distribution under the null hypothesis of spatial randomness.","category":"page"},{"location":"gspatialautocorrelation/","page":"Global Spatial Autocorrelation","title":"Global Spatial Autocorrelation","text":"All the examples on this page assume that the Guerry dataset is loaded and a polygon contiguity spatial weights object has been built and row-standardized.","category":"page"},{"location":"gspatialautocorrelation/","page":"Global Spatial Autocorrelation","title":"Global Spatial Autocorrelation","text":"using SpatialDatasets\nusing SpatialDependence\nusing StableRNGs\nusing Plots\n\nguerry = sdataset(\"Guerry\")\nW = polyneigh(guerry) \nnothing # hide","category":"page"},{"location":"gspatialautocorrelation/#Moran's-I","page":"Global Spatial Autocorrelation","title":"Moran's I","text":"","category":"section"},{"location":"gspatialautocorrelation/","page":"Global Spatial Autocorrelation","title":"Global Spatial Autocorrelation","text":"Moran's I (Moran, 1948) is the most used global spatial autocorrelation statistic. It is computed as:","category":"page"},{"location":"gspatialautocorrelation/","page":"Global Spatial Autocorrelation","title":"Global Spatial Autocorrelation","text":"I = fracNS_0fracsum_isum_jw_ij(x_i - barx)(x_j - barx)sum_i(x_i - barx)^2","category":"page"},{"location":"gspatialautocorrelation/","page":"Global Spatial Autocorrelation","title":"Global Spatial Autocorrelation","text":"with S_0 being the sum of the spatial weights, S_0 = sum_isum_j w_ij.","category":"page"},{"location":"gspatialautocorrelation/","page":"Global Spatial Autocorrelation","title":"Global Spatial Autocorrelation","text":"Moran's I can be computed with the moran function. By default, 9999 permutations are calculated for the inference. It is possible to specify a different number of permutations with the permutations optional parameter. For reproduciibility, it is possible to specify a custom random number generator with the rng optional parameter.","category":"page"},{"location":"gspatialautocorrelation/","page":"Global Spatial Autocorrelation","title":"Global Spatial Autocorrelation","text":"moran(guerry.Litercy, W, permutations = 9999, rng = StableRNG(1234567))","category":"page"},{"location":"gspatialautocorrelation/","page":"Global Spatial Autocorrelation","title":"Global Spatial Autocorrelation","text":"The interpretation of Moran's I depends on its value and significance:","category":"page"},{"location":"gspatialautocorrelation/","page":"Global Spatial Autocorrelation","title":"Global Spatial Autocorrelation","text":"Moran's I z-value Interpretation\n 0  0 and significant Positive spatial autocorrelation\n 0  0 and significant Negative spatial autocorrelation\nAny Any and non-significant Spatially random","category":"page"},{"location":"gspatialautocorrelation/#Geary's-c","page":"Global Spatial Autocorrelation","title":"Geary's c","text":"","category":"section"},{"location":"gspatialautocorrelation/","page":"Global Spatial Autocorrelation","title":"Global Spatial Autocorrelation","text":"Geary's c (Geary, 1954) is a global spatial autocorrelation statistic that focuses on dissimilarity. It is computed as:","category":"page"},{"location":"gspatialautocorrelation/","page":"Global Spatial Autocorrelation","title":"Global Spatial Autocorrelation","text":"c = fracN - 12S_0fracsum_isum_jw_ij(x_i -x_j)^2sum_i(x_i - barx)^2","category":"page"},{"location":"gspatialautocorrelation/","page":"Global Spatial Autocorrelation","title":"Global Spatial Autocorrelation","text":"Geary's I can be computed with the geary function. By default, 9999 permutations are calculated for the inference. It is possible to specify a different number of permutations with the permutations optional parameter. For reproduciibility, it is possible to specify a custom random number generator with the rng optional parameter.","category":"page"},{"location":"gspatialautocorrelation/","page":"Global Spatial Autocorrelation","title":"Global Spatial Autocorrelation","text":"geary(guerry.Litercy, W, permutations = 9999, rng = StableRNG(1234567))","category":"page"},{"location":"gspatialautocorrelation/","page":"Global Spatial Autocorrelation","title":"Global Spatial Autocorrelation","text":"The interpretation of Gery's c depends on its value and significance:","category":"page"},{"location":"gspatialautocorrelation/","page":"Global Spatial Autocorrelation","title":"Global Spatial Autocorrelation","text":"Geary's c z-value Interpretation\n 1  0 and significant Positive spatial autocorrelation\n 1  0 and significant Negative spatial autocorrelation\nAny Any and non-significant Spatially random","category":"page"},{"location":"gspatialautocorrelation/#Reference-distribution","page":"Global Spatial Autocorrelation","title":"Reference distribution","text":"","category":"section"},{"location":"gspatialautocorrelation/","page":"Global Spatial Autocorrelation","title":"Global Spatial Autocorrelation","text":"The random permutation operation results in a reference distribution for the statistic under the null hypothesis of spatial randomness. If the Plots.jl package is loaded, it is possible to plot the reference distribution together with the observed statistic (vertical red line) using the plot command:","category":"page"},{"location":"gspatialautocorrelation/","page":"Global Spatial Autocorrelation","title":"Global Spatial Autocorrelation","text":"Ilitercy = moran(guerry.Litercy, W, permutations = 9999, rng = StableRNG(1234567))\nplot(Ilitercy)","category":"page"},{"location":"gspatialautocorrelation/#Moran-Scatter-Plot","page":"Global Spatial Autocorrelation","title":"Moran Scatter Plot","text":"","category":"section"},{"location":"gspatialautocorrelation/","page":"Global Spatial Autocorrelation","title":"Global Spatial Autocorrelation","text":"The Moran Scatter Plot (Anselin, 1996) is a scatterplot with the variable in the horizontal axis and its spatial lag on the vertical axis. ","category":"page"},{"location":"gspatialautocorrelation/","page":"Global Spatial Autocorrelation","title":"Global Spatial Autocorrelation","text":"If the Plots.jl package is loaded, the plot function can be used to plot a Moran scatter plot. By default, the values of the variable are z-standardized, but it is possible to build the plot without standardizing by setting the optional parameter standardize to false.","category":"page"},{"location":"gspatialautocorrelation/","page":"Global Spatial Autocorrelation","title":"Global Spatial Autocorrelation","text":"plot(guerry.Litercy, W)","category":"page"},{"location":"gspatialautocorrelation/","page":"Global Spatial Autocorrelation","title":"Global Spatial Autocorrelation","text":"In the Moran scatter plot, observations are located in four quadrants, depending on the value of the attribute and the value of their neighbors with respect to the mean:","category":"page"},{"location":"gspatialautocorrelation/","page":"Global Spatial Autocorrelation","title":"Global Spatial Autocorrelation","text":"Quadrants Spatial Autocorrelation Interpretation\nUpper right Positive: High-high High values surrounded by high values\nLower left Positive: Low-low Low values surrounded by low values\nLower right Negative: High-Low High values surrounded by low values\nUpper left Negative: Low-high Low values surrounded by high values","category":"page"},{"location":"choropleth/","page":"Choropleth Maps","title":"Choropleth Maps","text":"CurrentModule = SpatialDependence","category":"page"},{"location":"choropleth/#Choropleth-Maps","page":"Choropleth Maps","title":"Choropleth Maps","text":"","category":"section"},{"location":"choropleth/","page":"Choropleth Maps","title":"Choropleth Maps","text":"The package contains functions to plot Choropleth Maps using different classification methods.","category":"page"},{"location":"choropleth/","page":"Choropleth Maps","title":"Choropleth Maps","text":"All the examples on this page asummes that the Guerry dataset and the Plots.jl package is loaded.","category":"page"},{"location":"choropleth/","page":"Choropleth Maps","title":"Choropleth Maps","text":"using SpatialDependence\nusing SpatialDatasets\nusing Plots\n\nguerry = sdataset(\"Guerry\"); \nnothing # hide","category":"page"},{"location":"choropleth/","page":"Choropleth Maps","title":"Choropleth Maps","text":"Choropleth maps can be made with plot function, with the first parameter being a vector of geometries, the second parameter the variable to classify, and the third parameter the classification method to use:","category":"page"},{"location":"choropleth/","page":"Choropleth Maps","title":"Choropleth Maps","text":"plot(guerry.geometry, guerry.Litercy, EqualIntervals())\nnothing # hide","category":"page"},{"location":"choropleth/","page":"Choropleth Maps","title":"Choropleth Maps","text":"It is also possible to pass a Table or a DataFrame as the first parameter and a symbol as the second parameter:","category":"page"},{"location":"choropleth/","page":"Choropleth Maps","title":"Choropleth Maps","text":"plot(guerry, :Litercy, EqualIntervals())\nnothing # hide","category":"page"},{"location":"choropleth/#Graduated","page":"Choropleth Maps","title":"Graduated","text":"","category":"section"},{"location":"choropleth/#Equal-Intervals","page":"Choropleth Maps","title":"Equal Intervals","text":"","category":"section"},{"location":"choropleth/","page":"Choropleth Maps","title":"Choropleth Maps","text":"Spatial observations are grouped into categories of the same length:","category":"page"},{"location":"choropleth/","page":"Choropleth Maps","title":"Choropleth Maps","text":"plot(guerry, :Litercy, EqualIntervals())","category":"page"},{"location":"choropleth/","page":"Choropleth Maps","title":"Choropleth Maps","text":"It is possible to specify a different number of intervals:","category":"page"},{"location":"choropleth/","page":"Choropleth Maps","title":"Choropleth Maps","text":"plot(guerry, :Litercy, EqualIntervals(3))\nnothing # hide","category":"page"},{"location":"choropleth/#Quantiles","page":"Choropleth Maps","title":"Quantiles","text":"","category":"section"},{"location":"choropleth/","page":"Choropleth Maps","title":"Choropleth Maps","text":"Spatial observations are grouped according to quantiles:","category":"page"},{"location":"choropleth/","page":"Choropleth Maps","title":"Choropleth Maps","text":"plot(guerry, :Litercy, Quantiles())","category":"page"},{"location":"choropleth/","page":"Choropleth Maps","title":"Choropleth Maps","text":"By default, spatial observations are categorized in quintiles (5 quantiles). It is possible to specify a different number of quantiles:","category":"page"},{"location":"choropleth/","page":"Choropleth Maps","title":"Choropleth Maps","text":"plot(guerry, :Litercy, Quantiles(4))\nnothing # hide","category":"page"},{"location":"choropleth/#Natural-Breaks-(Jenks)","page":"Choropleth Maps","title":"Natural Breaks (Jenks)","text":"","category":"section"},{"location":"choropleth/","page":"Choropleth Maps","title":"Choropleth Maps","text":"The Natural Breaks (Jenks) algorithm classify observations into groups with low heterogeneity within groups and high heterogeneity between groups:","category":"page"},{"location":"choropleth/","page":"Choropleth Maps","title":"Choropleth Maps","text":"plot(guerry, :Litercy, NaturalBreaks())","category":"page"},{"location":"choropleth/","page":"Choropleth Maps","title":"Choropleth Maps","text":"Is it possible to specify a different number of groups:","category":"page"},{"location":"choropleth/","page":"Choropleth Maps","title":"Choropleth Maps","text":"plot(guerry, :Litercy, NaturalBreaks(7))\nnothing # hide","category":"page"},{"location":"choropleth/#Custom-Breaks","page":"Choropleth Maps","title":"Custom Breaks","text":"","category":"section"},{"location":"choropleth/","page":"Choropleth Maps","title":"Choropleth Maps","text":"Users can specify the bins to generate custom breaks. The lower bound of the first class is set at the minimum value and the upper bound of the last class at the maximum value.","category":"page"},{"location":"choropleth/","page":"Choropleth Maps","title":"Choropleth Maps","text":"plot(guerry, :Litercy, CustomBreaks([20, 30, 60]))","category":"page"},{"location":"choropleth/#Statistical","page":"Choropleth Maps","title":"Statistical","text":"","category":"section"},{"location":"choropleth/#Box-Plot-(Box-map)","page":"Choropleth Maps","title":"Box Plot (Box map)","text":"","category":"section"},{"location":"choropleth/","page":"Choropleth Maps","title":"Choropleth Maps","text":"This method classify observations as in a box plot:","category":"page"},{"location":"choropleth/","page":"Choropleth Maps","title":"Choropleth Maps","text":"Category Lower Upper\n1 -infty Q_25 - h * IQR\n2 Q_25 - h * IQR Q_25\n3 Q_25 Q_50\n4 Q_50 Q_75\n5 Q_75 Q_75 + h * IQR\n6 Q_75 + h * IQR infty","category":"page"},{"location":"choropleth/","page":"Choropleth Maps","title":"Choropleth Maps","text":"where Q_25, Q_50 and Q_75, are the first, second and third quartile respectively. IQR is the interquartile range, and h is the hinge.","category":"page"},{"location":"choropleth/","page":"Choropleth Maps","title":"Choropleth Maps","text":"plot(guerry, :Litercy, BoxPlot())","category":"page"},{"location":"choropleth/","page":"Choropleth Maps","title":"Choropleth Maps","text":"By default, the hinge is set to 15, but the user can choose a different value:","category":"page"},{"location":"choropleth/","page":"Choropleth Maps","title":"Choropleth Maps","text":"plot(guerry, :Litercy, BoxPlot(3.0))\nnothing # hide","category":"page"},{"location":"choropleth/#Standard-Deviation","page":"Choropleth Maps","title":"Standard Deviation","text":"","category":"section"},{"location":"choropleth/","page":"Choropleth Maps","title":"Choropleth Maps","text":"In this method, observations are z-standardization and classified as standard deviations from the mean:","category":"page"},{"location":"choropleth/","page":"Choropleth Maps","title":"Choropleth Maps","text":"Category Lower Upper\n1 -infty -2\n2 -2 -1\n3 -1 0\n4 0 1\n5 1 2\n6 2 infty","category":"page"},{"location":"choropleth/","page":"Choropleth Maps","title":"Choropleth Maps","text":"plot(guerry, :Litercy, StdMean())","category":"page"},{"location":"choropleth/#Percentiles","page":"Choropleth Maps","title":"Percentiles","text":"","category":"section"},{"location":"choropleth/","page":"Choropleth Maps","title":"Choropleth Maps","text":"Observations are classified according to the following percentiles:","category":"page"},{"location":"choropleth/","page":"Choropleth Maps","title":"Choropleth Maps","text":"Category Lower Upper\n1 minimum 1\n2 1 10\n3 10 50\n4 50 90\n5 90 99\n6 99 maximum","category":"page"},{"location":"choropleth/","page":"Choropleth Maps","title":"Choropleth Maps","text":"plot(guerry, :Litercy, Percentiles())","category":"page"},{"location":"choropleth/","page":"Choropleth Maps","title":"Choropleth Maps","text":"It is possible to specify different percentiles:","category":"page"},{"location":"choropleth/","page":"Choropleth Maps","title":"Choropleth Maps","text":"plot(guerry.geometry, guerry.Litercy, Percentiles([10, 30, 50, 70, 90]))\nnothing # hide","category":"page"},{"location":"choropleth/#Unique-Values","page":"Choropleth Maps","title":"Unique Values","text":"","category":"section"},{"location":"choropleth/","page":"Choropleth Maps","title":"Choropleth Maps","text":"In a Unique Values map, each unique value is assigned to a different category.","category":"page"},{"location":"choropleth/","page":"Choropleth Maps","title":"Choropleth Maps","text":"plot(guerry, :Region, Unique())","category":"page"},{"location":"choropleth/#Co-location","page":"Choropleth Maps","title":"Co-location","text":"","category":"section"},{"location":"choropleth/","page":"Choropleth Maps","title":"Choropleth Maps","text":"Co-location maps are used to identify spatial observations where the categories of two or more variables match.","category":"page"},{"location":"choropleth/","page":"Choropleth Maps","title":"Choropleth Maps","text":"plot(guerry, [:Litercy, :Donatns], CoLocation(BoxPlot()))","category":"page"},{"location":"choropleth/#Customizing-Maps","page":"Choropleth Maps","title":"Customizing Maps","text":"","category":"section"},{"location":"choropleth/","page":"Choropleth Maps","title":"Choropleth Maps","text":"By default, the lower interval is open (value not included), and the upper interval is closed (value is included). It is possible to change this behavior by setting the lower and upper parameters to :open or :closed.","category":"page"},{"location":"choropleth/","page":"Choropleth Maps","title":"Choropleth Maps","text":"plot(guerry, :Litercy, Quantiles(), lower = :closed, upper = :open)","category":"page"},{"location":"choropleth/","page":"Choropleth Maps","title":"Choropleth Maps","text":"Total counts are automatically added to the labels of the categories in the map. It is possible to suppress counts by setting the counts parameter to false.","category":"page"},{"location":"choropleth/","page":"Choropleth Maps","title":"Choropleth Maps","text":"plot(guerry, :Litercy, Quantiles(), counts = false)","category":"page"},{"location":"choropleth/","page":"Choropleth Maps","title":"Choropleth Maps","text":"In graduated maps, the lower and upper bound are separated with a comma. It is possible to specify a different separator with the sep parameter:","category":"page"},{"location":"choropleth/","page":"Choropleth Maps","title":"Choropleth Maps","text":"plot(guerry, :Litercy, Quantiles(), sep = \" -- \")","category":"page"},{"location":"choropleth/","page":"Choropleth Maps","title":"Choropleth Maps","text":"It is possible to change the legend position with the legend parameter. Possible values are: :best, :topleft, :top, :topright, :right, :bottomright, :bottom,  :bottomleft, :left. It also possible to place the legend outside the plot area with: :outertopleft, :outertop, :outertopright, :outerright, :outerbottomright, :outerbottom, :outerbottomleft. The legend can be removed by setting the parameter to false.","category":"page"},{"location":"choropleth/","page":"Choropleth Maps","title":"Choropleth Maps","text":"plot(guerry, :Litercy, Quantiles(), legend = :topleft)","category":"page"},{"location":"choropleth/","page":"Choropleth Maps","title":"Choropleth Maps","text":"Color palette is set by default to :YlOrBr for graduated maps, reverse :RdBu for statistical maps, and  :Paired for unique values maps. Users can change the palette with the palette parameter and reverse the colors by setting rev to true. A list of the color shcemes available in the Plots.jl package can be found here.","category":"page"},{"location":"choropleth/","page":"Choropleth Maps","title":"Choropleth Maps","text":"plot(guerry, :Litercy, Quantiles(), palette = :greens, rev = true)","category":"page"},{"location":"choropleth/#Classify-without-mapping","page":"Choropleth Maps","title":"Classify without mapping","text":"","category":"section"},{"location":"choropleth/","page":"Choropleth Maps","title":"Choropleth Maps","text":"Users interested only in the classification and not in the choropleth map can use the functions mapclassify to obtain the classification of observations according to the criteria listed before.","category":"page"},{"location":"choropleth/","page":"Choropleth Maps","title":"Choropleth Maps","text":"mc = mapclassify(Quantiles(), guerry.Litercy);\nnothing # hide","category":"page"},{"location":"choropleth/","page":"Choropleth Maps","title":"Choropleth Maps","text":"It is possible to obtain the number of observations on each class with the counts function:","category":"page"},{"location":"choropleth/","page":"Choropleth Maps","title":"Choropleth Maps","text":"counts(mc)","category":"page"},{"location":"choropleth/","page":"Choropleth Maps","title":"Choropleth Maps","text":"The lower and upper bounds can be retrieved with the bounds function:","category":"page"},{"location":"choropleth/","page":"Choropleth Maps","title":"Choropleth Maps","text":"lbound, ubound = bounds(mc)","category":"page"},{"location":"choropleth/","page":"Choropleth Maps","title":"Choropleth Maps","text":"With the maplabels function, it is possible to generate the labels of the classes:","category":"page"},{"location":"choropleth/","page":"Choropleth Maps","title":"Choropleth Maps","text":"labs = maplabels(mc)","category":"page"},{"location":"choropleth/","page":"Choropleth Maps","title":"Choropleth Maps","text":"We can obtain the class to which each observation is assigned with the assignments function:","category":"page"},{"location":"choropleth/","page":"Choropleth Maps","title":"Choropleth Maps","text":"assignments(mc)","category":"page"},{"location":"choropleth/","page":"Choropleth Maps","title":"Choropleth Maps","text":"For unique values and Co-location classifications, the levels of the classes can be obtained with the levels class:","category":"page"},{"location":"choropleth/","page":"Choropleth Maps","title":"Choropleth Maps","text":"mc = mapclassify(Unique(), guerry.Region)\nlevels(mc)","category":"page"},{"location":"api/","page":"API","title":"API","text":"CurrentModule = SpatialDependence","category":"page"},{"location":"api/#API","page":"API","title":"API","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"Modules = [SpatialDependence]","category":"page"},{"location":"api/#SpatialDependence.assignments-Tuple{SpatialDependence.AbstractMapClassification}","page":"API","title":"SpatialDependence.assignments","text":"assignments(mc::AbstractMapClassification)\n\nGet the vector of classes indices for each observation.\n\nassignments(mc)[i] is the index of the class to which the i-th observation is assigned.\n\n\n\n\n\n","category":"method"},{"location":"api/#SpatialDependence.bounds","page":"API","title":"SpatialDependence.bounds","text":"bounds(mc::AbstractMapClassification)\n\nGet the lower and upper bounds of the classes.\n\nbounds(mc)[1][k] is the lower bound of the k-class.\n\nbounds(mc)[2][k] is the upper bound of the k-class.\n\n\n\n\n\n","category":"function"},{"location":"api/#SpatialDependence.dnearneigh-Tuple{Any}","page":"API","title":"SpatialDependence.dnearneigh","text":"dnearneigh(A; threshold)\n\nBuild a spatial weights object from a table A that constains a points geometry column using a distance threshold.\n\n\n\n\n\n","category":"method"},{"location":"api/#SpatialDependence.dnearneigh-Tuple{Vector{Float64}, Vector{Float64}}","page":"API","title":"SpatialDependence.dnearneigh","text":"dnearneigh(X, Y; threshold)\n\nBuild a spatial weights object from a set of coordinates using a distance threshold.\n\n\n\n\n\n","category":"method"},{"location":"api/#SpatialDependence.dnearneigh-Tuple{Vector{T} where T<:Union{Missing, GeoInterface.AbstractPoint}}","page":"API","title":"SpatialDependence.dnearneigh","text":"dnearneigh(P; threshold)\n\nBuild a spatial weights object from a vector of points using a distance threshold.\n\n\n\n\n\n","category":"method"},{"location":"api/#SpatialDependence.geary-Tuple{Vector{T} where T<:Real, SpatialWeights}","page":"API","title":"SpatialDependence.geary","text":"geary(x, W)\n\nCompute the Geary's c test of global spatial autocorrelation.\n\nOptional Arguments\n\npermutations=9999: number of permutations for the randomization test.\nrng=default_rng(): random number generator for the randomization test.\n\n\n\n\n\n","category":"method"},{"location":"api/#SpatialDependence.islands-Tuple{SpatialWeights}","page":"API","title":"SpatialDependence.islands","text":"islands (W::SpatialWeights)\n\nReturn a vector with the islands in the spatial weights object.\n\n\n\n\n\n","category":"method"},{"location":"api/#SpatialDependence.knearneigh-Tuple{Any}","page":"API","title":"SpatialDependence.knearneigh","text":"knearneigh(A; k)\n\nBuild a spatial weights object from a table A that constains a points geometry column using k nearest neighbors..\n\n\n\n\n\n","category":"method"},{"location":"api/#SpatialDependence.knearneigh-Tuple{Vector{Float64}, Vector{Float64}}","page":"API","title":"SpatialDependence.knearneigh","text":"knearneigh(X, Y; k)\n\nBuild a spatial weights object from a set of coordinates using k nearest neighbors.\n\n\n\n\n\n","category":"method"},{"location":"api/#SpatialDependence.knearneigh-Tuple{Vector{T} where T<:Union{Missing, GeoInterface.AbstractPoint}}","page":"API","title":"SpatialDependence.knearneigh","text":"knearneigh(P; k)\n\nBuild a spatial weights object from a vector of points using k nearest neighbors.\n\n\n\n\n\n","category":"method"},{"location":"api/#SpatialDependence.level","page":"API","title":"SpatialDependence.level","text":"levels(mc::AbstractMapClassification)\n\nGet the levels of the classes.\n\nlevels(mc)[k] is the level of the k-class.\n\n\n\n\n\n","category":"function"},{"location":"api/#SpatialDependence.mapclassify","page":"API","title":"SpatialDependence.mapclassify","text":"mapclassify (mcr::AbstractMapClassificator, x::Vector)\n\nClassify observations in variable x in classess using the criterion specified in mcr.\n\n\n\n\n\n","category":"function"},{"location":"api/#SpatialDependence.maplabels","page":"API","title":"SpatialDependence.maplabels","text":"maplabels (mcAbstractMapClassification)\n\nGet the labels of the classification mc.\n\nOptional Arguments\n\ndigits=2: number of decimal digits.\nsep=\", \": separator between class lower and upper bounds.\ncounts=true: include the total number of observations on each class.\n\n\n\n\n\n","category":"function"},{"location":"api/#SpatialDependence.moran-Tuple{Vector{T} where T<:Real, SpatialWeights}","page":"API","title":"SpatialDependence.moran","text":"moran(x, W)\n\nCompute the  Moran's I test of global spatial autocorrelation.\n\nOptional Arguments\n\npermutations=9999: number of permutations for the randomization test.\nrng=default_rng(): random number generator for the randomization test.\n\n\n\n\n\n","category":"method"},{"location":"api/#SpatialDependence.neighbors-Tuple{SpatialWeights, Int64}","page":"API","title":"SpatialDependence.neighbors","text":"neighbors(W::SpatialWeights, i::Int)\n\nReturn a vector with the neighbors of i.\n\n\n\n\n\n","category":"method"},{"location":"api/#SpatialDependence.nislands-Tuple{SpatialWeights}","page":"API","title":"SpatialDependence.nislands","text":"nislands (W::SpatialWeights)\n\nReturn the number of islands in the spatial weights object.\n\n\n\n\n\n","category":"method"},{"location":"api/#SpatialDependence.polyneigh-Tuple{Any}","page":"API","title":"SpatialDependence.polyneigh","text":"polyneigh(A, criterion = :Queen)\n\nBuild a spatial weights object from table A that contains a geometry column.\n\nOptional Arguments\n\ncriterion=:Queen: neighbour criterion. :Queen or :Rook.\ntol=0.0: tolerance for polygon contiguity.\n\n\n\n\n\n","category":"method"},{"location":"api/#SpatialDependence.polyneigh-Tuple{Vector{T} where T<:Union{Missing, GeoInterface.AbstractMultiPolygon, GeoInterface.AbstractPolygon}}","page":"API","title":"SpatialDependence.polyneigh","text":"polyneigh(P, criterion = :Queen)\n\nBuild a spatial weights object from a vector of polygons P.\n\nOptional Arguments\n\ncriterion=:Queen: neighbour criterion. :Queen or :Rook.\ntol=0.0: tolerance for polygon contiguity.\n\n\n\n\n\n","category":"method"},{"location":"api/#SpatialDependence.reggeomlattice-Tuple{Int64, Int64}","page":"API","title":"SpatialDependence.reggeomlattice","text":"reggeomlattice(n, m)\n\nCreate a regular geometry-lattice of n rows and m columns.\n\nOptional Arguments\n\ngtype=:polygon: geometry. :polygon or :point.\ndirection=:rightdown: direction. :rightup, :rightdown, :leftdown or :leftup.\n\n\n\n\n\n","category":"method"},{"location":"api/#SpatialDependence.slag-Tuple{SpatialWeights, Vector{T} where T<:Real}","page":"API","title":"SpatialDependence.slag","text":"slag(W, x)\n\nCalculate the spatial lag of x using the spatial weights W.\n\n\n\n\n\n","category":"method"},{"location":"api/#SpatialDependence.wtransform!-Tuple{SpatialWeights, Symbol}","page":"API","title":"SpatialDependence.wtransform!","text":"wtransform!(W::SpatialWeights, style::Symbol)\n\nIn-place transformation of the weights using the specified style.\n\nWeights transformation\n\nstyle can be one of the following:\n\n:binary: 1 if neighbor, 0 if not.\n:row: row-standardized. Each row sum equals one.\n\n\n\n\n\n","category":"method"},{"location":"api/#SpatialDependence.wtransform-Tuple{SpatialWeights, Symbol}","page":"API","title":"SpatialDependence.wtransform","text":"wtransform(W::SpatialWeights, style::Symbol)\n\nReturns a transformed copy of the weights matrix.\n\n\n\n\n\n","category":"method"},{"location":"api/#SpatialDependence.wtransformation-Tuple{SpatialWeights}","page":"API","title":"SpatialDependence.wtransformation","text":"wtransformation (W::SpatialWeights)\n\nReturn the current transformation of the spatial weights.\n\n\n\n\n\n","category":"method"},{"location":"api/#StatsBase.counts-Tuple{SpatialDependence.AbstractMapClassification}","page":"API","title":"StatsBase.counts","text":"counts(mc::AbstractMapClassification)\n\nGet the vector of classess sizes.\n\ncounts(mc)[k] is the number of observations assigned to the k-class.\n\n\n\n\n\n","category":"method"},{"location":"api/#StatsBase.weights-Tuple{SpatialWeights, Int64}","page":"API","title":"StatsBase.weights","text":"weights(W::SpatialWeights, i::Int)\n\nReturn a vector with the weights of the neighbors of i.\n\n\n\n\n\n","category":"method"},{"location":"spatiallag/","page":"Spatial Lag","title":"Spatial Lag","text":"CurrentModule = SpatialDependence","category":"page"},{"location":"spatiallag/#Spatial-lags","page":"Spatial Lag","title":"Spatial lags","text":"","category":"section"},{"location":"spatiallag/","page":"Spatial Lag","title":"Spatial Lag","text":"slag","category":"page"},{"location":"spatiallag/#SpatialDependence.slag","page":"Spatial Lag","title":"SpatialDependence.slag","text":"slag(W, x)\n\nCalculate the spatial lag of x using the spatial weights W.\n\n\n\n\n\n","category":"function"},{"location":"","page":"Home","title":"Home","text":"CurrentModule = SpatialDependence","category":"page"},{"location":"#SpatialDependence","page":"Home","title":"SpatialDependence","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"The package SpatialDependence.jl is a Julia package for spatial dependence (spatial autocorrelation), spatial weights matrices, and exploratory spatial data analysis (ESDA).","category":"page"},{"location":"#Installation","page":"Home","title":"Installation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"The package can be installed with the Julia package manager:","category":"page"},{"location":"","page":"Home","title":"Home","text":"julia> using Pkg; Pkg.add(\"SpatialDependence\")","category":"page"},{"location":"#Example","page":"Home","title":"Example","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"The following example reads Guerry's Moral statistics of France data and builds a spatial contiguity matrix from the polygons. The spatial weights matrix is row standardized, and the Morans' I index is calculated:","category":"page"},{"location":"","page":"Home","title":"Home","text":"# Load packages\nusing Plots\nusing SpatialDependence\nusing SpatialDatasets\nusing StableRNGs\n\n# Guerry's Moral statistics of France data from the SpatialDatasets.jl package\nguerry = sdataset(\"Guerry\");\n\n# Plot Litercy variable\nplot(guerry, :Litercy, NaturalBreaks(), legend = :topleft, title = \"Litercy\")","category":"page"},{"location":"","page":"Home","title":"Home","text":"# Build polygon contiguity matrix\nW = polyneigh(guerry.geometry);","category":"page"},{"location":"","page":"Home","title":"Home","text":"# Global Moran test of Spatial Autocorrelation of the Litercy variable\nmoran(guerry.Litercy, W, permutations = 9999, rng = StableRNG(1234567))","category":"page"},{"location":"","page":"Home","title":"Home","text":"# Moran Scatterplot of the Litercy variable\nplot(guerry.Litercy, W, xlabel = \"Litercy\")","category":"page"},{"location":"#Documentation-index","page":"Home","title":"Documentation index","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Pages = [\"sweightmatrices.md\", \"spatiallag.md\", \"gspatialautocorrelation.md\", \"choropleth.md\"]\nDepth = 2","category":"page"},{"location":"#Authors","page":"Home","title":"Authors","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"SpatialDependence.jl is being developed by Javier Barbero.","category":"page"},{"location":"sweightmatrices/","page":"Spatial Weight Matrices","title":"Spatial Weight Matrices","text":"CurrentModule = SpatialDependence","category":"page"},{"location":"sweightmatrices/#Spatial-Weight-Matrices","page":"Spatial Weight Matrices","title":"Spatial Weight Matrices","text":"","category":"section"},{"location":"sweightmatrices/#Polygon-contiguity","page":"Spatial Weight Matrices","title":"Polygon contiguity","text":"","category":"section"},{"location":"sweightmatrices/","page":"Spatial Weight Matrices","title":"Spatial Weight Matrices","text":"polyneigh","category":"page"},{"location":"sweightmatrices/#SpatialDependence.polyneigh","page":"Spatial Weight Matrices","title":"SpatialDependence.polyneigh","text":"polyneigh(P, criterion = :Queen)\n\nBuild a spatial weights object from a vector of polygons P.\n\nOptional Arguments\n\ncriterion=:Queen: neighbour criterion. :Queen or :Rook.\ntol=0.0: tolerance for polygon contiguity.\n\n\n\n\n\npolyneigh(A, criterion = :Queen)\n\nBuild a spatial weights object from table A that contains a geometry column.\n\nOptional Arguments\n\ncriterion=:Queen: neighbour criterion. :Queen or :Rook.\ntol=0.0: tolerance for polygon contiguity.\n\n\n\n\n\n","category":"function"},{"location":"sweightmatrices/#Points-distance-threshold","page":"Spatial Weight Matrices","title":"Points distance threshold","text":"","category":"section"},{"location":"sweightmatrices/","page":"Spatial Weight Matrices","title":"Spatial Weight Matrices","text":"dnearneigh","category":"page"},{"location":"sweightmatrices/#SpatialDependence.dnearneigh","page":"Spatial Weight Matrices","title":"SpatialDependence.dnearneigh","text":"dnearneigh(X, Y; threshold)\n\nBuild a spatial weights object from a set of coordinates using a distance threshold.\n\n\n\n\n\ndnearneigh(P; threshold)\n\nBuild a spatial weights object from a vector of points using a distance threshold.\n\n\n\n\n\ndnearneigh(A; threshold)\n\nBuild a spatial weights object from a table A that constains a points geometry column using a distance threshold.\n\n\n\n\n\n","category":"function"},{"location":"sweightmatrices/#Points-K-nearest-neighbors","page":"Spatial Weight Matrices","title":"Points K nearest neighbors","text":"","category":"section"},{"location":"sweightmatrices/","page":"Spatial Weight Matrices","title":"Spatial Weight Matrices","text":"knearneigh","category":"page"},{"location":"sweightmatrices/#SpatialDependence.knearneigh","page":"Spatial Weight Matrices","title":"SpatialDependence.knearneigh","text":"knearneigh(X, Y; k)\n\nBuild a spatial weights object from a set of coordinates using k nearest neighbors.\n\n\n\n\n\nknearneigh(P; k)\n\nBuild a spatial weights object from a vector of points using k nearest neighbors.\n\n\n\n\n\nknearneigh(A; k)\n\nBuild a spatial weights object from a table A that constains a points geometry column using k nearest neighbors..\n\n\n\n\n\n","category":"function"},{"location":"sweightmatrices/#Spatial-Matrix-transformation","page":"Spatial Weight Matrices","title":"Spatial Matrix transformation","text":"","category":"section"},{"location":"sweightmatrices/","page":"Spatial Weight Matrices","title":"Spatial Weight Matrices","text":"wtransform!\nwtransform\nSpatialDependence.wtransformation","category":"page"},{"location":"sweightmatrices/#SpatialDependence.wtransform!","page":"Spatial Weight Matrices","title":"SpatialDependence.wtransform!","text":"wtransform!(W::SpatialWeights, style::Symbol)\n\nIn-place transformation of the weights using the specified style.\n\nWeights transformation\n\nstyle can be one of the following:\n\n:binary: 1 if neighbor, 0 if not.\n:row: row-standardized. Each row sum equals one.\n\n\n\n\n\n","category":"function"},{"location":"sweightmatrices/#SpatialDependence.wtransform","page":"Spatial Weight Matrices","title":"SpatialDependence.wtransform","text":"wtransform(W::SpatialWeights, style::Symbol)\n\nReturns a transformed copy of the weights matrix.\n\n\n\n\n\n","category":"function"},{"location":"sweightmatrices/#SpatialDependence.wtransformation","page":"Spatial Weight Matrices","title":"SpatialDependence.wtransformation","text":"wtransformation (W::SpatialWeights)\n\nReturn the current transformation of the spatial weights.\n\n\n\n\n\n","category":"function"},{"location":"sweightmatrices/#Spatial-Matrix-information","page":"Spatial Weight Matrices","title":"Spatial Matrix information","text":"","category":"section"},{"location":"sweightmatrices/","page":"Spatial Weight Matrices","title":"Spatial Weight Matrices","text":"nislands\nislands\nneighbors\nweights","category":"page"},{"location":"sweightmatrices/#SpatialDependence.nislands","page":"Spatial Weight Matrices","title":"SpatialDependence.nislands","text":"nislands (W::SpatialWeights)\n\nReturn the number of islands in the spatial weights object.\n\n\n\n\n\n","category":"function"},{"location":"sweightmatrices/#SpatialDependence.islands","page":"Spatial Weight Matrices","title":"SpatialDependence.islands","text":"islands (W::SpatialWeights)\n\nReturn a vector with the islands in the spatial weights object.\n\n\n\n\n\n","category":"function"},{"location":"sweightmatrices/#SpatialDependence.neighbors","page":"Spatial Weight Matrices","title":"SpatialDependence.neighbors","text":"neighbors(W::SpatialWeights, i::Int)\n\nReturn a vector with the neighbors of i.\n\n\n\n\n\n","category":"function"},{"location":"sweightmatrices/#StatsBase.weights","page":"Spatial Weight Matrices","title":"StatsBase.weights","text":"weights(W::SpatialWeights, i::Int)\n\nReturn a vector with the weights of the neighbors of i.\n\n\n\n\n\n","category":"function"}]
}
